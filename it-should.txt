1 

[] It should have a gameboard
[] It should store the gameboard as an array inside a Gameboard object
[] It should have a factory function for creating player objects


If the previous and the next item has the same class and the next item is not 3 or 6 and the previous item is not 2, 4, 7 

If every third item had 2 following items with the same class

If 0, 4, and 8 has the same class or 2, 4, 6 has the same class 

if start at 3 and every 2nd item has the same class
If start at 0 and every fourth item has the same class
If every 3rd item in the array has the same class

//Check winner, should check for three in a row and a tie

//if 0, 1, 2 === equal - win
         if i = 0 and the value increases by 1 and length < 3.
         total 3
//if 3, 4, 5 === equal - win
         if i = 3 and ---
         if array[i].value = i + 1
         winnerArray.push(array[i])

         array.reduce(a, b => {
            if (b.value = a.value+1) {
               array.push(array)
            }
         })

         total 12
//if 6, 7, 8 === equal - win
         if i = 6 and ---

         total 21
//if 0, 3, 6 === equal - win
         if i = 0 and value increases by 2 --
         
         total 9;
//if 1, 4, 7 === equal - win
         if i = 1 and value increases by 3 --
         total 12
//if 2, 5, 8 === equal - win
         if i = 2 and value increases by 3 --


         total 15
//if 0, 4, 8 === equal - win
         if i = 0 and value increases by 4 --

         total 12
//if 2, 4, 6 === equal - win
         if i = 2 and value increases by 2 --

         total 12
//if none of the above & 8 cells marked === tie


//would it be eaier to make one array for each row and one for each column, and then two for diagonals?
//Or should I hardcode a check for each 
//use splice,filter to make new arrays of the main array to check for tie or win?


//if three in column or row 1 

array.splice(0, 3)
for (let i = 0; i < array.length; i += nth) {
   if (array[i].classList.contains('X') {
    winnerArr.push(array[i]);
   }
}

'
if three in one column has the same class
or three in a row has the same class
or the first in row 1, second in row 2, and 3rd in row 3

or the third, second, and first in each row


Playing against computer:

There should be an option to play against computer
computer should be assigned marker Í„"O"
computer should wait its turn and randomly choose a cell to place its marker
computer should favour placing its marker in X or O arrays that are > 5
